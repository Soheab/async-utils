[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pyright]
include = ["async_utils"]
exclude = [
    "**/__pycache__",
    "build",
    "dist",
    "docs",
]

pythonVersion = "3.10"
typeCheckingMode = "strict"
pythonPlatform = "All"
reportMissingImports = true
reportMissingTypeStubs = false
reportUnnecessaryTypeIgnoreComment = true


[tool.ruff]

line-length = 130
target-version = "py310"
select = [
    "F", "E", "I", "UP", "YTT", "ANN", "S", "BLE", "B", "A", "COM", "C4", "DTZ",
    "EM", "ISC", "G", "INP", "PIE", "T20", "Q003", "RSE", "RET", "SIM", "TID", "PTH",
    "ERA", "PD", "PLC", "PLE", "PLW", "TRY", "NPY", "RUF"
]

extend-ignore = [
    "G002",  # erroneous issue with %-logging when logging can be confiured for % logging
    "S101",  # use of assert here is a known quantity, blame typing memes
    "PLR2004",  # Magic value comparison, may remove later
    "SIM105",  # supressable exception, I'm not paying the overhead of contextlib.supress for stylistic choices.
    "C90",  # mccabe complexity memes
    "ANN101", # missing "Self" annotation, self is implicit
    "ANN102", # Same, but for cls
    "ANN201", # return types
    "ANN204",  # special method return types
    "PLR0913", # number of function arguments
    "UP007", # "Use | For Union" doesn't account for typevar tuple unpacking.
    "PTH123",  # `open()` should be replaced by `Path.open()`
    "PLR",     # more complexity things
    "COM812",  # trailing commmas
    "ERA001", # commented out code
    "E731", # No, I think I'll keep my lambdas when I feel they are the right call
    "B905", # zip without explicit strict=
    "COM819",  # reccomended by ruff when using ruff format
    "E501",  # reccomended by ruff when using ruff format
    "ISC001",  # reccomended by ruff when using ruff format
    "Q003",  # reccomended by ruff when using ruff format
]